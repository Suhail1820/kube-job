name: Deploy to Minikube

on:
  push:
    branches:
      - '*'  # Trigger the workflow on pushes to any branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Install kubectl
      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      # Step 3: Start Minikube (optional, only if you're using Minikube locally)
      - name: Start Minikube
        run: |
          minikube start --driver=docker

      # Step 4: Set up Kubernetes config using the provided certificates from GitHub Secrets
      - name: Set up KubeConfig
        run: |
          # Create the .kube directory if it doesn't exist
          mkdir -p $HOME/.kube

          # Write the certificates to files
          echo "${{ secrets.KUBE_CA_CRT }}" > $HOME/.kube/ca.crt
          echo "${{ secrets.KUBE_CLIENT_CRT }}" > $HOME/.kube/client.crt
          echo "${{ secrets.KUBE_CLIENT_KEY }}" > $HOME/.kube/client.key

          # Set up the kubeconfig file with the certificates
          kubectl config set-cluster minikube --server=https://127.0.0.1:8443 --certificate-authority=$HOME/.kube/ca.crt
          kubectl config set-credentials user --client-certificate=$HOME/.kube/client.crt --client-key=$HOME/.kube/client.key
          kubectl config set-context minikube --cluster=minikube --user=user
          kubectl config use-context minikube

      # Step 5: Deploy the job to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/job.yaml
          kubectl get jobs
